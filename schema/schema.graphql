schema {
            query:Query
            mutation: Mutation
            subscription: Subscription
        }
type Event @aws_iam{
	id: String!
	source: String!
	account: String!
	time: String!
	region: String!
	detailType: String!
	data: AWSJSON!
}
type Query{
    enhanceNote(input:String!):EnhanceNoteResult! @aws_api_key
    getNote(id:String!,userId:String!):Note! @aws_api_key
    getAllNotes(userId:String!):[Note!]!@aws_api_key
    queryDocument(input:String!):DocumentResult! @aws_api_key
}

type Mutation{
    publish(detailType: String!, id:String! data: String!, source: String!, account: String!, time: String!, region: String!): Event @aws_iam @aws_api_key
    createUserAccount(input:CreateUserInput!):User! @aws_api_key
    createNote(notesInput:CreateNoteInput!):Note! @aws_api_key
    updateNote(notesInput:updateNoteInput!):Note! @aws_api_key
    createDocument(input:CreateDocumentInput!):Document!@aws_api_key
    updateDocument(input:UpdateDocumentInput!):Document! @aws_api_key

}

type Subscription {
  createdNote: Note @aws_subscribe(mutations: ["createNote"])
    subscribe(detailType: String, account: String, source: String, region: String): Event
		@aws_subscribe(mutations: ["publish"])

}
type DocumentResult @aws_api_key{
    result:String!
}
type EnhanceNoteResult @aws_api_key{
    result:String!
}

type User{
    id:ID!
    username:String!
    email:AWSEmail!
    createdOn:AWSTimestamp!
}

type Note{
    id:ID!
    note:String!
    title:String!
    status:Boolean!
    username:String!
    createdOn:AWSTimestamp!
    updatedOn:AWSTimestamp!
}

type Document{
    id:ID!
    documentName:String!
    documentType:DOCUMENT_TYPE!
    documentSize:String!
    documentStatus:DOCUMENT_STATUS!
    createdOn:AWSTimestamp!
    updatedOn:AWSTimestamp!
}

input CreateDocumentInput{
    documentName:String!
    documentType:DOCUMENT_TYPE!
    documentSize:String!
    documentStatus:DOCUMENT_STATUS!
    createdOn:AWSTimestamp!
}

input UpdateDocumentInput{
    id:ID!
    documentStatus:DOCUMENT_STATUS!
    updatedOn:AWSTimestamp!
}



input CreateNoteInput{

    note:String!
    title:String!
    username:String!
    status:Boolean!

}
input updateNoteInput{
    id:String!
    title:String!
    note:String!
    username:String!
    status:Boolean!

}



input CreateUserInput{
    username:String!
    email:AWSEmail!


}

enum DOCUMENT_TYPE{
    PDF
    MP3
    MP4
}

enum DOCUMENT_STATUS{
    UPLOADED
    PROCESSING
    EMBEDDING
    COMPLETED
}


